/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 15 13:05:13 GMT 2018
 */

package servico.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dao.Dao;
import model.impl.Evento;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import servico.impl.ServicoEvento;
import validador.Validador;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ServicoEvento_ESTest extends ServicoEvento_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Validador<Evento> validador0 = (Validador<Evento>) mock(Validador.class, new ViolatedAssumptionAnswer());
      ServicoEvento servicoEvento0 = new ServicoEvento(validador0, (Dao<Evento>) null);
      Evento evento0 = mock(Evento.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        servicoEvento0.salva(evento0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("servico.impl.ServicoEvento", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Validador<Evento> validador0 = (Validador<Evento>) mock(Validador.class, new ViolatedAssumptionAnswer());
      ServicoEvento servicoEvento0 = new ServicoEvento(validador0, (Dao<Evento>) null);
      Evento evento0 = mock(Evento.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        servicoEvento0.create(evento0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("servico.impl.ServicoEvento", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Validador<Evento> validador0 = (Validador<Evento>) mock(Validador.class, new ViolatedAssumptionAnswer());
      Dao<Evento> dao0 = (Dao<Evento>) mock(Dao.class, new ViolatedAssumptionAnswer());
      ServicoEvento servicoEvento0 = new ServicoEvento(validador0, dao0);
      servicoEvento0.salva((Evento) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Validador<Evento> validador0 = (Validador<Evento>) mock(Validador.class, new ViolatedAssumptionAnswer());
      Dao<Evento> dao0 = (Dao<Evento>) mock(Dao.class, new ViolatedAssumptionAnswer());
      ServicoEvento servicoEvento0 = new ServicoEvento(validador0, dao0);
      Evento evento0 = mock(Evento.class, new ViolatedAssumptionAnswer());
      servicoEvento0.create(evento0);
  }
}
