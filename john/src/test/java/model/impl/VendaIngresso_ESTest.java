/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 15 13:12:14 GMT 2018
 */

package model.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.List;
import model.Ingresso;
import model.impl.Evento;
import model.impl.VendaIngresso;
import model.impl.ov.Periodo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VendaIngresso_ESTest extends VendaIngresso_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VendaIngresso vendaIngresso0 = new VendaIngresso((Periodo) null);
      Periodo periodo0 = vendaIngresso0.getPeriodoDeVendaDeIngresso();
      assertNull(periodo0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Periodo periodo0 = new Periodo(localDate0, 1349);
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0);
      Evento evento0 = new Evento();
      vendaIngresso0.informaEvento(evento0);
      Evento evento1 = vendaIngresso0.getEvento();
      assertNull(evento1.getNome());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Periodo periodo0 = new Periodo(localDate0, 1349);
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0);
      List<Ingresso> list0 = vendaIngresso0.getIngressosDisponiveis();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Periodo periodo0 = new Periodo(localDate0, 1349);
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0);
      Evento evento0 = vendaIngresso0.getEvento();
      assertNull(evento0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      Evento evento0 = new Evento();
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0, evento0);
      Periodo periodo1 = vendaIngresso0.getPeriodoDeVendaDeIngresso();
      assertSame(periodo0, periodo1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Periodo periodo0 = new Periodo(localDate0, 1349);
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0);
      vendaIngresso0.adicionaIngressoParaVenda((Ingresso) null);
      List<Ingresso> list0 = vendaIngresso0.getIngressosDisponiveis();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      Evento evento0 = new Evento();
      VendaIngresso vendaIngresso0 = new VendaIngresso(periodo0, evento0);
      vendaIngresso0.informaPeriodoDeVenda(periodo0);
  }
}
